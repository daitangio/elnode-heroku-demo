#!/bin/bash
set -x -e


#HEROKU LIKE ENV
# Push dev env...
export PORT=7777
APP=immense-refuge-1686

doHerokuDeploy(){
    # compatibility variable for SSH due to JJ's PC SETUP
    export USERPROFILE=$HOME
    #heroku maintenance:on  --app $APP
    git push europe master
    #heroku maintenance:off --app $APP
    heroku ps:scale web=1 --app $APP
    # While waiting setup...
    git push origin master
    if heroku logs --num 25  --app $APP | grep -i Try ; then
	echo "Just Here"
    else
	curl -i http://$APP.herokuapp.com/ &
	echo "Waiting fireup"
	wait
    fi
    curl -i http://$APP.herokuapp.com/heartbeat
}



help(){
    cat <<EOF 
elnoder <command> [args]
Suported commands:

 + deploy
   Deploy on $APP
 + run
   Test locally on port 7777
 + test
   Like run but only test the heartbeat and then exit
 + stop
   Stop $APP remotely

EOF

}

runElnodeLocally(){
    # --daemon unsupported under win32 :(
    # set http_proxy if it is needed
    # -Q equals:  -q --no-site-file --no-site-lisp --no-splash
    date
    exec emacs -Q  --execute '(switch-to-buffer "*Messages*")'  --load start-elnode.el  
}

#trap 'echo "Killed" $(date)' SIGKILL 
#trap 'echo "Killed" $(date)' EXIT
#trap 'echo $(date) DEBUG' DEBUG

trap 'echo "?Elnode Heartbeat failed" $(date)' SIGKILL

cmd=$*
shift 1
case $cmd in
    deploy)
	time doHerokuDeploy
	;;
    stop)
	heroku logs --num 25  --app $APP
	heroku ps:scale web=0 --app $APP
	heroku logs --num 25  --app $APP
	;;
    status)
	heroku ps --app $APP
	;;
    run)
	runElnodeLocally 
	;;
    test) 
	date
	# One minute is the expected boot time. The following probe will check that
	# to be elegant, the prob will use $$ as pid, because 
	# runElnodeLocally will "exec" the shell to emacs
	# See http://stackoverflow.com/questions/687948/timeout-a-command-in-bash-without-unnecessary-delay
	(
	    sleep 10
	    date
	    unset http_proxy
	    echo "Checking Elnode..."
	    if (curl -i http://localhost:$PORT/heartbeat/devenv  | grep 'HTTP/1.1 200'); then 
		echo OK
		curl -i http://localhost:$PORT/heartbeat/devenv
		kill -s SIGKILL $$		
	    else 
		echo "FATAL ERROR killing $$" 
		# SIGTERM does not work...
		kill -s SIGKILL $$
	    fi
	    
	) &
	runElnodeLocally 
	;;
    help)
	help;;
    *)set +e +x
	echo "?Unknown command: $cmd"
	help;;
esac
